{
  "rsc for ts": {
    "prefix": "rsc",
    "body": [
      "import { FC } from 'react';",
      "",
      "",
      "const ${TM_FILENAME_BASE}: FC = () => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t$1",
      "\t\t</div>",
      "\t);",
      "};",
      "export default ${TM_FILENAME_BASE};"
    ],
    "description": "cosnt functional component || typescript"
  },
  "React TypeScript Component With Props": {
    "prefix": "rscp",
    "body": [
      "import { FC } from 'react';",
      "",
      "interface ${TM_FILENAME_BASE}Props {",
      "\t$1",
      "}",
      "",
      "const ${TM_FILENAME_BASE}: FC<${TM_FILENAME_BASE}Props> = ($2) => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t$3",
      "\t\t</div>",
      "\t);",
      "};",
      "",
      "export default ${TM_FILENAME_BASE};"
    ],
    "description": "Create a React TypeScript component with props"
  },
  "create default slice": {
    "prefix": "drs",
    "body": [
      "import { createSlice } from '@reduxjs/toolkit';",
      "",
      "const name = '$1'",
      "const initialState: $2 = { $3 };",
      "",
      "export const $4Slice = createSlice({",
      "\tname: `${name}/$4Slice,",
      "\tinitialState,",
      "\treducers: {",
      "\t\t$5",
      "\t},",
      "});",
      "",
      "export const { actions: $1Actions } = $4Slice;",
      "export const { reducer: $1Reducer } = $4Slice;",
    ]
  },
  "create async slice": {
    "prefix": "ars",
    "body": [
      "import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';",
      "import { addQueryCases } from 'shared/lib/helpers/addQueryCase';",
      "import { THUNK_ANY } from 'shared/lib/types/types';",
      "import { REQUEST_STATUSES } from 'shared/lib/variables/variables';",
      "",
      "",
      "const name = '$1';",
      "",
      "",
      "const ENDPOINTS = { $2 };",
      "",
      "",
      "export const $3 = createAsyncThunk(",
      "\t`${name}/$3`,",
      "\tasync (_, { extra: api }: THUNK_ANY) => {",
      "\t\ttry{",
      "\t\t\tconst response = await api.get(ENDPOINTS.$2);",
      "\t\t\treturn response.data;",
      "\t\t} catch(e){",
      "\t\t\treturn e",
      "\t\t}",
      "\t},",
      ");",
      "",
      "",
      "const initialState = {",
      "\t$1Status: REQUEST_STATUSES.NOT_REQUESTED,",
      "\t$1: [],",
      "\t$1Error: null,",
      "};",
      "",
      "",
      "const $1Slice = createSlice({",
      "\tname,",
      "\tinitialState,",
      "\treducers: {},",
      "\textraReducers(builder) {",
      "\t\taddQueryCases(builder, $3, {",
      "\t\t\tstatus: '$1Status',",
      "\t\t\tdata: '$1',",
      "\t\t\terror: '$1Error',",
      "\t\t});",
      "\t},",
      "});",
      "",
      "",
      "export default $1Slice;"
    ]
  }
}
